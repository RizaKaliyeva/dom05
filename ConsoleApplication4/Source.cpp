#include<iostream>
#include<locale.h>
#include"Header.h"
#include<time.h>
#include<stdio.h>

using namespace std;



void main()
{
	setlocale(LC_ALL, "rus");
	srand(time(NULL));
	int n, exit;
	do
	{
		printf("please enter exemple: ");
		scanf("%d", &n);
		switch (n)
		{
		case 1:
		{
			/*8.	Массив не более чем из 100 символов, содержащий произвольный русский текст.
			Написать, какие буквы и сколько раз встречаются в этом тексте.Ответ должен приводиться в грамматически правильной форме, например, а – 5 раз, к – 7 раз и т.д.*/
			int cntLetter[33] = { 0 };

			char text[] = "Массив не более чем из 100 символов, содержащий произвольный русский текст.Написать, какие буквы и сколько раз встречаются в этом тексте.Ответ должен приводиться в грамматически правильной форме";

			printf("%s\n", text);

			int cnt = 0;
			for (char Letter = 'А'; Letter <= 'Я'; Letter++, cnt++)
			{
				for (int i = 0; text[i] != '\0'; i++)
				{
					if ((text[i] == Letter) || (text[i] == Letter + 32))
						cntLetter[cnt]++;
				}
			}

			for (int i = 0; text[i] != '\0'; i++)
			{
				if ((text[i] == 'Ё') || (text[i] == 'ё'))
					cntLetter[32]++;
			}

			for (int i = 0; i < 32; i++)
			{
				char c = ' ';
				if (cntLetter[i] != 0) {
					if (!((cntLetter[i] % 100 >= 12) && (cntLetter[i] % 100 <= 14)) && ((cntLetter[i] % 10 >= 2) && (cntLetter[i] % 10 <= 4)))
						c = 'а';
					printf("%c %d раз%c\n", (char)(i - 64), cntLetter[i], c);
				}


			}

			if (cntLetter[32] != 0) {
				char c = ' ';
				if (!((cntLetter[32] % 100 >= 12) && (cntLetter[32] % 100 <= 14)) && ((cntLetter[32] % 10 >= 2) && (cntLetter[32] % 10 <= 4)))
					c = 'а';
				printf("Ё %d раз%c\n", cntLetter[32], c);
			}

		}
		break;
		case 2:
		{
			//10.	Дан массив символов, содержащий слова, разделенные точкой с запятой(;).Набор заканчивается двоеточием(:).Определить, сколько в нем слов, заканчивающихся буквой, а
			char str[100] = "skate world sun take"; //набор слов.

			cout << str << endl;

			char *word = strtok(str, " "); //получаю новую строку

			while (*word) {
				cout << find_word(word, 'k') << ' ';
				word = strtok(NULL, " ");
			}

			cout << endl;

		}
		break;
		case 3:
		{
			/*1.	Функция strncpy(s1, s2, n) копирует ровно n символов из строки s2 в строку s1, усекая при необходимости строку s2 или
			заполняя избыточные символы дополнительными нулевыми символами.Целевая строка может не с одержать завершающего нулевого символа,
			если длина строки s2 равна или больше n.Функция возвращает строку s1.Напишите собственную версию этой функции.Протестируйте эту функцию
			в рамках завершенной программы, которая ис¬пользует цикл для передачи входных значений рассматриваемой функции.*/
			int r;
			char s2[] = "Функция strncpy(s1, s2, n) копирует ровно n символов из строки s2 в строку s1, усекая при необходимости строку s2 или";
			cout << "Vvedite razmer massiva?";cin >> r;
			char *s1 = (char*)calloc(r + 1, sizeof(char));
			printf("%s", s2);
			copyS(s2, s1, r);
			printf("%s", s1);
		}
		break;
		case 4:
		{
			/*7.	Дан массив символов, состоящий из предложений, разделенных точками.Напишите программу, производящую следующее форматирование :
			a.после каждой точки в конце предложения должен стоять хотя бы один пробел;
			b.первое слово в предложении должно начинаться с прописной буквы.Замечание, текст может быть, как на русском, так и на английском языке*/

			char *str = (char*)malloc(400 * sizeof(char));
			strcpy(str, "7.Дан массив символов, содержащий текст.Дан массив символов, состоящий из предложений, разделенных точками.Напишите программу, производящую следующее форматирование.");

			repl2(str);

		}
		break;
		case 5:
		{
			/*2.	Напишите программу, которая читает входные данные до тех пор, пока не встретится символ EOF, и выводит эти данные на экран.Эта функция должна распознавать и реализовывать следующие аргументы командной строки :
			a. - р печатать входные данные такими, какими они есть.
				b. - u преобразовать входные данные к верхнему регистру.
				c. - l преобразовать входные данные к нижнему регистру.*/
			char *str = (char*)malloc(150 * sizeof(char));
			strcpy(str, "vgLbfhbjfl u ujknk u L gfgfdg L EOF hgjh L");

			repl(str);


		}
		break;
		case 6:
		{
			//9.	Дан массив символов, содержащий текст.Слова зашифрованы – каждое из них записано наоборот.Расшифровать сообщение.
		}
		break;
		default:printf("No exemple\n");
			break;
		}
		printf("Продолжить? 1-Yes 2-No:");
		scanf("%d", &exit);
		printf("\n");
	} while (exit == 1);
}